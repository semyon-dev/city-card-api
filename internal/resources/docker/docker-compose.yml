version: "3"

services:
  nginx:
    image: nginx:1.13
    ports:
      - 80:80
      - 443:443
    links:
      - "goods-scanner-api"
      - "prometheus"
      - "grafana"
      - "nodeexporter"
    volumes:
      # - ./src:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certificates/certificate_full_chain.pem:/etc/certificate_full_chain.pem
      - ./certificates/private_key.pem:/etc/private_key.pem
      # - ./certificates/public.pem:/etc/ssl/public.pem
    networks:
      - monitor-net
  # caddy:
  #   image: caddy:2
  #   container_name: caddy
  #   volumes:
  #     # - ../certificates:/root/.caddy  # to save certificates on disk
  #     - ./caddy/Caddyfile:/etc/Caddyfile  # to mount custom Caddyfile
  #   ports:
  #     - "8081:8081"
  #     - "9090:9090"
  #     - "9100:9100"
  #     - "3000:3000"
  #     - "80:80"
  #     - "443:443"
  #   links:
  #     - "goods-scanner-api"
  #     - "prometheus"
  #     - "grafana"
  #     - "nodeexporter"
  #   networks:
  #     - monitor-net

  goods-scanner-api:
    build:
      context: "../../../"
    container_name: goods-scanner-api
    expose:
      - 8081
    ports:
      - "8081:8081"
    environment:
      - MONGO_URI=mongodb://dima:pubavi09@178.154.193.229:27017
      - HTTP_PORT=8081
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    # ports:
    #   - "9100:9100"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      # - GF_SECURITY_ADMIN_USER=d.chudinov.spb@yandex.ru
      # - GF_SECURITY_ADMIN_PASSWORD=dima2001
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

volumes:
  caddy: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  monitor-net:
    driver: bridge